SQL server

Reduce LDF file

Select DB - Go to properties

Options - Choose recovery model - simple


-----

Select DB - Tasks - Back up - Backup type as full - Click on 

---

Select DB - Tasks - Shrink - Files - 

Choose File type - as log - select release unused space - ok

-----

How to Shrink Database Log File Size in SQL Server

You can run the command sp_spaceused

ALTER DATABASE TransactionDB SET RECOVERY SIMPLE WITH NO_WAIT
USE TransactionDB

DBCC SHRINKFILE (N‘MyDatabase_Log’ , @, TRUNCATEONLY)

ALTER DATABASE TransactionDB SET RECOVERY FULL WITH NO_WAIT

---------

Run the below query. It will list objects in recently modified order.

SELECT name, create_date, modify_date
FROM sys.objects order by 3 desc

This will list all columns of all recently modified objects.

SELECT * FROM sys.objects order by modify_date desc


--------------------

select schema_name(schema_id) as schema_name,
       name as table_name,
       create_date,
       modify_date
from sys.tables
where modify_date > DATEADD(DAY, -30, CURRENT_TIMESTAMP)
order by modify_date desc;

----------------

USE [AdventureWorks];
GO
SELECT name AS [Name], 
       SCHEMA_NAME(schema_id) AS schema_name, 
       type_desc, 
       create_date, 
       modify_date
FROM sys.objects
WHERE type ='u'

-------------

USE [AdventureWorks];
GO
SELECT name AS [Name], 
       SCHEMA_NAME(schema_id) AS schema_name, 
       type_desc, 
       create_date, 
       modify_date
FROM sys.objects
WHERE type ='p'

----



USE [AdventureWorks];
GO
SELECT name AS [Name], 
       SCHEMA_NAME(schema_id) AS schema_name, 
       type_desc, 
       create_date, 
       modify_date
FROM sys.objects
WHERE modify_date > GETDATE() - 60
ORDER BY modify_date;  
GO


--------------

To see view


SELECT *
FROM information_schema.Tables
WHERE [Table_Name]='demotable'

------


SELECT *
FROM information_schema.CHECK_CONSTRAINTS


-----

SELECT catalog_name AS DBName, 
    Schema_name, 
    schema_owner
FROM information_schema.SCHEMATA;


-----

Search an object

Search object using SSMS object explorer details
We can use SSMS in-built object search functionality to find out specific objects across all online databases in SQL instance.

Navigate to View-> Object Explorer Details in SSMS. You can use a keyboard shortcut F7 to open it.

It opens the following screen and shows the various folders – Databases, Security, Server objects, Replication, PolyBase, Always on High Availability. You can also see the search box, as highlighted below.


You can browse to the specified object in the database using the object explorer. Click on the particular object and navigate to Synchronize.

----


To filter the tables, expand [AdventureWorks] database, right-click on the tables and click on Filter settings.

-------

Check Recently Modified Objects In SQL Server Database

SELECT * FROM sys.objects order by modify_date desc

https://www.microsoft.com/en-us/sql-server/sql-server-downloads
https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms


C:\Program Files\Microsoft SQL Server\
C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\Data
C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\Data
C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\Backup

pwd : sqlserver2023

C:\Program Files\Microsoft SQL Server\160\Setup Bootstrap\Log\20230209_210252\ConfigurationFile.ini

C:\Program Files (x86)\Microsoft SQL Server Management Studio 19

--------

uswwr name : sa pwd : sqlserver2023

select @@version;

F5

----

 SQL Server sample database called BikeStores.

1) Enter the Database name as BikeStores and (2) click the OK button to create the new database.

From the File menu, choose Open > File… menu item to open a script file.
Select the BikeStores Sample Database – create objects.sql file and click the Open button
 same for load data.sql 

--------------

server properties - > memory - 
set maxixum server mempry in MB - > AVailable/2 --> 8000/2


https://learn.microsoft.com/en-us/sql/t-sql/database-console-commands/dbcc-shrinkfile-transact-sql?view=sql-server-ver16

Shrink a log file to a specified target size

USE AdventureWorks2022;
GO
-- Truncate the log by changing the database recovery model to SIMPLE.
ALTER DATABASE AdventureWorks2022
SET RECOVERY SIMPLE;
GO
-- Shrink the truncated log file to 1 MB.
DBCC SHRINKFILE (AdventureWorks2022_Log, 1);
GO
-- Reset the database recovery model.
ALTER DATABASE AdventureWorks2022
SET RECOVERY FULL;
GO

-------------------

http://www.techsapphire.in/index/sql_server_100_cpu_usage_fix/0-166


SQL server 100% CPU usage fix
This issue is very common and commonly faced by DBA, developers and server management team on production server i.e. SQL server leads into 100% CPU usage and also start consuming all available memory. Now most of the time you have seen technical people restarting sql services, or killing long running processes and even restarting complete server, and they can avoid this situation. Before starting any thing I would like to discuss a common myth people have that this is happening because of long running queries only. Which is not all ways true, some times:

Longer running query can be problem
Query having maximum worker time are also problem
Query execution count can also cause problem
Now in order to fix this issue you have to go through below video:



In above video 2 methods are discussed to resolve this issue, both method are totally different from each other and also applied over 2 different situation, these methods are not solution for same problem, in spite both are different solution to different situation. Methods are:

Fix Methods:
Method 1 (traditional):
Finding query with issue with traditional method. This involve tracing process on server which is running for long time and leading into this. And after tracing the process taking necessary actions in order to resolve situation.

--Method 1
--Checking for intense process running on server 
--Taking required actions
Exec sp_who2
DBCC INPUTBUFFER(SPID)
KILL SPID


Killing process or taking other necessary action required.

Method 2:
Going 1 level deeper
Using Built in Dynamic Management View. Dynamic Management View are views provided by sql server itself so that people can check what is happening in server. In this method we will be finding Query with maximum total_worker_time or execution_count. And optimizing it if it is select query.

by creating index if suggested or required
by droping index if required
by creating partitions
by changing cardinality
by splitting long running update queries in smaller units

--Method 2
--Checking internal stats and execution plan
--Stats to be considered
--execution_count
--last_worker_time
--Internal check
--Dynamic Management View
select * from sys.dm_exec_query_stats
select * from sys.dm_exec_query_stats order by creation_time desc
select * from sys.dm_exec_query_stats order by total_worker_time desc
select * from sys.dm_exec_query_plan(Plan)

--here Plan is plan_handle from result of above query.
select * from sys.dm_exec_procedure_stats order by total_worker_time desc

For causing stress tool name SQL load generator is used it is free tool. You can download it from link here.

They query used are mentioned below:

select  * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail
union all select * from sales.SalesOrderDetail


-------------

http://www.techsapphire.in/index/sql_complex_queries_query_optimization_and_interview_questions_sql_server_2016/0-190

