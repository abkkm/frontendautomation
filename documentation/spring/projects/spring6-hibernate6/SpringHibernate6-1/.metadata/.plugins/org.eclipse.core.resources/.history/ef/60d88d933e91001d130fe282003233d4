package com.example.SpringHibernate6;

import com.example.SpringHibernate6.Entity.*;

import java.io.File;
import java.io.IOException;
import java.lang.annotation.Annotation;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.FileSystems;
import java.nio.file.FileVisitResult;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.hibernate.SessionFactory;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;


import java.nio.file.Path;
import java.nio.file.PathMatcher;

public class HibernateUtil
{

    private static final SessionFactory sessionFactory=buildSessionFactory();

    private static SessionFactory buildSessionFactory() {
        if (sessionFactory == null) {
            try {
                Configuration configuration = new Configuration().configure();
                configuration.addAnnotatedClass(CategoryEntity.class);
                configuration.addAnnotatedClass(CustomersEntity.class);
                configuration.addAnnotatedClass(DeliveriesEntity.class);
                configuration.addAnnotatedClass(MarketEntity.class);
                configuration.addAnnotatedClass(ProductsEntity.class);
                configuration.addAnnotatedClass(SalesEntity.class);
                configuration.addAnnotatedClass(SuppliersEntity.class);
                StandardServiceRegistryBuilder builder = new StandardServiceRegistryBuilder().applySettings(configuration.getProperties());
                return configuration.buildSessionFactory(builder.build());
                
            } catch (Exception e) {
                System.out.println("Exception - " + e);
            }
        }
        return sessionFactory;
    }
    
    
    
    public static SessionFactory getSessionFactory() {
        return sessionFactory;
    }

    public static void shutdown() {
        getSessionFactory().close();
    }

}

